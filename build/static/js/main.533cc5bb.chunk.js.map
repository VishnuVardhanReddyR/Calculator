{"version":3,"sources":["components/Button.js","components/Input.js","components/ClearButton.js","components/DelButton.js","index.js"],"names":["Button","isOperator","val","isNaN","className","this","props","children","onClick","handleClick","Component","Input","ClearButton","handleClear","DelButton","handleDel","Calci","addtoInput","setState","input","state","addZerotoInput","addDecimal","indexOf","clearInput","currentNumber","previousNumber","operator","delete","add","subtract","multiply","divide","mod","evaluate","parseInt","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.533cc5bb.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport './Button.css';\nclass Button extends Component {\n    isOperator = val => {\n        return !isNaN(val) || val === \".\"; \n    };\n    render() {\n        return (\n            <div \n            className={`button ${this.isOperator(this.props.children) ? \"\" : \"operator\"}`}\n            onClick={() => this.props.handleClick(this.props.children)}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default Button;","import React, { Component } from \"react\";\nimport './Input.css';\nclass Input extends Component {\n    render() {\n        return (\n            <div className=\"input\">\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default Input;","import React, { Component } from \"react\";\nimport './ClearButton.css';\nclass ClearButton extends Component {\n    render() {\n        return (\n            <div className=\"clear-btn\"\n                onClick={() => this.props.handleClear()}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default ClearButton;","import React, { Component } from \"react\";\nimport './DelButton.css';\nclass DelButton extends Component {\n    render() {\n        return (\n            <div className=\"del-btn\"\n            onClick={() => this.props.handleDel()}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DelButton;","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport DelButton from \"./components/DelButton\";\nclass Calci extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        input: \"\",\n        previousNumber: \"\",\n        currentNumber: \"\",\n        operator: \"\",\n      };\n    }\n\n    addtoInput = val => {\n      this.setState({ input: this.state.input + val });\n    };\n\n    addZerotoInput = val => {\n      //to avoid zero as a initial number\n      if(this.state.input != \"\") {\n        this.setState({ input: this.state.input + val });\n      }\n    };\n\n    addDecimal = val => {\n      //to allow only one decimal point\n      if (this.state.input.indexOf(\".\") === -1 ) {\n        this.setState({ input: this.state.input + val });\n      }\n    };\n\n    clearInput = () => {\n        this.setState({ input: \"\",\n                        currentNumber: \"\",\n                        previousNumber: \"\",\n                        operator: \"\"\n      });\n    };\n\n    delete = () => {\n\n      this.setState({ input: \"\",\n                      currentNumber: \"\" \n    });\n    };\n\n    add = () => {\n      this.state.previousNumber=this.state.input;\n      this.setState({input: \"\"});\n      this.state.operator = \"plus\";\n    };\n\n    subtract = () => {\n      this.state.previousNumber=this.state.input;\n      this.setState({input: \"\"});\n      this.state.operator = \"minus\";\n    };\n\n    multiply = () => {\n      this.state.previousNumber=this.state.input;\n      this.setState({input: \"\"});\n      this.state.operator = \"star\";\n    }\n    divide = () => {\n      this.state.previousNumber=this.state.input;\n      this.setState({input: \"\"});\n      this.state.operator = \"slash\";\n    }\n    mod = () => {\n      this.state.previousNumber=this.state.input;\n      this.setState({input: \"\"});\n      this.state.operator = \"percent\";\n    }\n\n    evaluate = () => {\n      this.state.currentNumber=this.state.input;\n      if(this.state.operator === \"plus\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) + parseInt(this.state.currentNumber)\n        });\n      }\n      else if(this.state.operator === \"minus\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) - parseInt(this.state.currentNumber)\n        });\n      }\n      else if(this.state.operator === \"star\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) * parseInt(this.state.currentNumber)\n        });\n      }\n      else if(this.state.operator === \"slash\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) / parseInt(this.state.currentNumber)\n        });\n      }\n      else if(this.state.operator === \"percent\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) % parseInt(this.state.currentNumber)\n        });\n      }\n    };\n\n    render() {\n      return(\n        <div className=\"App\">\n          <div className=\"calc-wrapper\">\n            <div className=\"row\">\n              <Input>{this.state.input}</Input>\n            </div>\n            <div className=\"row\">\n              <ClearButton handleClear={this.clearInput}>clear</ClearButton>\n              <div className=\"row1\">\n              <DelButton handleDel={this.delete}>Delete</DelButton>\n              <Button handleClick={this.evaluate}>=</Button> \n            </div>\n            </div>\n            <div className=\"row\">\n              <Button handleClick={this.addtoInput} >7</Button>\n              <Button handleClick={this.addtoInput} >8</Button>\n              <Button handleClick={this.addtoInput} >9</Button>\n              <Button handleClick={this.divide}>/</Button>\n            </div>\n            <div className=\"row\">\n              <Button handleClick={this.addtoInput} >4</Button>\n              <Button handleClick={this.addtoInput} >5</Button>\n              <Button handleClick={this.addtoInput} >6</Button>\n              <Button handleClick={this.multiply}>X</Button>\n            </div>\n            <div className=\"row\">\n              <Button handleClick={this.addtoInput} >1</Button>\n              <Button handleClick={this.addtoInput} >2</Button>\n              <Button handleClick={this.addtoInput} >3</Button>\n              <Button handleClick={this.subtract}>-</Button>\n            </div>\n            <div className=\"row\">\n              <Button handleClick={this.addZerotoInput}>0</Button>\n              <Button handleClick={this.addDecimal}>.</Button>\n              <Button handleClick={this.mod}>%</Button>\n              <Button handleClick={this.add}>+</Button>\n            </div>\n          </div>\n        </div>\n      );\n\n    }\n  }\n  \n  ReactDOM.render(<Calci />, document.getElementById('root'));"],"sourceRoot":""}