{"ast":null,"code":"var _jsxFileName = \"/Users/vishnu/Desktop/react/calci/src/index.js\";\nimport React, { component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass Calci extends React.Component {\n  constructor() {\n    super(); // set our default state \n\n    this.state = {\n      question: '',\n      answer: ''\n    }; // Bind our handleClick method (sets 'this' explicitly \n    // to refer to this componenent) We did this because 'this' \n    // would refer to the source of the click events \n\n    this.handleClick = this.handleClick.bind(this);\n  } // our method to handle all click events from our buttons \n\n\n  handleClick(event) {\n    // get the value from the target element (button) \n    const value = event.target.value;\n\n    switch (value) {\n      case '=':\n        {\n          // if it's an equal sign, use the eval module \n          // to evaluate the question ,convert the answer \n          // (in number) to String \n          if (this.state.question !== '') {\n            var ans = '';\n\n            try {\n              ans = eval(this.state.question);\n            } catch (err) {\n              this.setState({\n                answer: \"Math Error\"\n              });\n            }\n\n            if (ans === undefined) this.setState({\n              answer: \"Math Error\"\n            }); // update answer in our state. \n            else this.setState({\n                answer: ans,\n                question: ''\n              });\n            break;\n          }\n        }\n\n      case 'Clear':\n        {\n          // if it's the Clears sign, just clean our  \n          // question and answer in the state \n          this.setState({\n            question: '',\n            answer: ''\n          });\n          break;\n        }\n\n      case 'Delete':\n        {\n          var str = this.state.question;\n          str = str.substr(0, str.length - 1);\n          this.setState({\n            question: str\n          });\n          break;\n        }\n\n      default:\n        {\n          // for every other command, update the answer in the state \n          this.setState({\n            question: this.state.question += value\n          });\n          break;\n        }\n    }\n  }\n\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"caci app\");\n  }\n\n}\n\nReactDOM.render(React.createElement(Calci, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/vishnu/Desktop/react/calci/src/index.js"],"names":["React","component","ReactDOM","Calci","Component","constructor","state","question","answer","handleClick","bind","event","value","target","ans","eval","err","setState","undefined","str","substr","length","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,GAAG;AACV,YADU,CAGV;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb,CAJU,CASV;AACA;AACA;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD,GAd6B,CAgB9B;;;AACND,EAAAA,WAAW,CAACE,KAAD,EAAO;AAEd;AACA,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;;AAEA,YAAQA,KAAR;AACE,WAAK,GAAL;AAAU;AAER;AACA;AACA;AACA,cAAI,KAAKN,KAAL,CAAWC,QAAX,KAAsB,EAA1B,EACA;AACI,gBAAIO,GAAG,GAAC,EAAR;;AACE,gBACE;AACIA,cAAAA,GAAG,GAAGC,IAAI,CAAC,KAAKT,KAAL,CAAWC,QAAZ,CAAV;AACH,aAHH,CAIE,OAAMS,GAAN,EACA;AACI,mBAAKC,QAAL,CAAc;AAACT,gBAAAA,MAAM,EAAE;AAAT,eAAd;AACH;;AACD,gBAAIM,GAAG,KAAGI,SAAV,EACI,KAAKD,QAAL,CAAc;AAACT,cAAAA,MAAM,EAAE;AAAT,aAAd,EADJ,CAGA;AAHA,iBAKI,KAAKS,QAAL,CAAc;AAAET,gBAAAA,MAAM,EAAEM,GAAV;AAAgBP,gBAAAA,QAAQ,EAAE;AAA1B,eAAd;AACJ;AACH;AACN;;AACD,WAAK,OAAL;AAAc;AAEZ;AACA;AACA,eAAKU,QAAL,CAAc;AAAEV,YAAAA,QAAQ,EAAE,EAAZ;AAAgBC,YAAAA,MAAM,EAAE;AAAxB,WAAd;AACA;AACH;;AAED,WAAK,QAAL;AAAe;AACb,cAAIW,GAAG,GAAG,KAAKb,KAAL,CAAWC,QAArB;AACEY,UAAAA,GAAG,GAAGA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAaD,GAAG,CAACE,MAAJ,GAAW,CAAxB,CAAN;AACA,eAAKJ,QAAL,CAAc;AAACV,YAAAA,QAAQ,EAAEY;AAAX,WAAd;AACA;AACH;;AAEH;AAAS;AAEL;AACA,eAAKF,QAAL,CAAc;AAAEV,YAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,IAAuBK;AAAnC,WAAd;AACA;AACD;AA9CD;AAgDH;;AACOU,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;;AA7E2B;;AAgF9BpB,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B","sourcesContent":["import React, { component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass Calci extends React.Component {\n    constructor() { \n        super(); \n      \n        // set our default state \n        this.state = { \n          question: '', \n          answer: ''\n        } \n      \n        // Bind our handleClick method (sets 'this' explicitly \n        // to refer to this componenent) We did this because 'this' \n        // would refer to the source of the click events \n        this.handleClick = this.handleClick.bind(this); \n      } \n\n      // our method to handle all click events from our buttons \nhandleClick(event){ \n \n    // get the value from the target element (button) \n    const value = event.target.value; \n   \n    switch (value) { \n      case '=': { \n   \n        // if it's an equal sign, use the eval module \n        // to evaluate the question ,convert the answer \n        // (in number) to String \n        if (this.state.question!=='') \n        { \n            var ans=''; \n              try\n                { \n                    ans = eval(this.state.question); \n                } \n                catch(err) \n                { \n                    this.setState({answer: \"Math Error\"}); \n                } \n                if (ans===undefined) \n                    this.setState({answer: \"Math Error\"}); \n   \n                // update answer in our state. \n                else\n                    this.setState({ answer: ans , question: ''}); \n                break; \n            } \n      } \n      case 'Clear': { \n   \n        // if it's the Clears sign, just clean our  \n        // question and answer in the state \n        this.setState({ question: '', answer: '' }); \n        break; \n    } \n \n    case 'Delete': { \n      var str = this.state.question; \n        str = str.substr(0,str.length-1); \n        this.setState({question: str}); \n        break; \n    } \n \n  default: { \n \n      // for every other command, update the answer in the state \n      this.setState({ question: this.state.question += value}) \n      break; \n    } \n  } \n} \n        render() {\n          return (\n            <h1>\n                caci app\n            </h1>\n          );\n        }\n      }\n      \n      ReactDOM.render(<Calci />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}